{"ast":null,"code":"var _jsxFileName = \"/Users/faisalkarim/Desktop/hackathons/gpt-notes/notes-app/src/components/TextBox/TextBox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from \"axios\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport Card from \"react-bootstrap/Card\";\n\n// google api custom search json api key AIzaSyA4yWgqa2eDcBvv5StSDs_AbVeaZ8eGaCc\n\n// cx number\n/* <script async src=\"https://cse.google.com/cse.js?cx=969e5dfcbcafd41b8\">\n</script>\n<div class=\"gcse-search\"></div> */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextBox() {\n  _s();\n  const editorRef = useRef(null);\n  const [cardContent, setCardContent] = useState(\"\");\n  const [googleURLs, setGoogleURLs] = useState(null);\n  const [youtubeURLs, setYoutubeURLs] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      apiKey: \"7c0izecivr1lps70wenvvlpyffvpawkgcjjy7t0h7rlfjod4\",\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: \"<p>This is the initial content of the editor.</p>\",\n      init: {\n        height: 500,\n        menubar: false,\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n        toolbar: 'undo redo | blocks | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help | myCustomButton',\n        setup: editor => {\n          editor.ui.registry.addButton('myCustomButton', {\n            text: 'Search',\n            onAction: async () => {\n              var search_content = editor.selection.getContent();\n              console.log(search_content);\n              console.log(typeof search_content);\n              axios.post(\"/search\", {\n                \"search\": search_content\n              }).then(response => {\n                console.log(response.data);\n                setCardContent(response.data.answer);\n              });\n              var googleApi = \"AIzaSyA4yWgqa2eDcBvv5StSDs_AbVeaZ8eGaCc\";\n              var cx = \"969e5dfcbcafd41b8\";\n              var googleURL = \"https://www.googleapis.com/customsearch/v1?key=\" + googleApi + \"&cx=\" + cx + \"&q=\" + search_content;\n\n              /*axios.get(googleURL)\n              .then(response => {\n                console.log(response)\n                console.log(googleURL)\n                setGoogleURLs(response.data.items);\n              });*/\n\n              var youtubeURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=5&q=\" + search_content + \"&type=video&key=\" + googleApi;\n              axios.get(youtubeURL).then(response => {\n                console.log(response);\n                console.log(youtubeURL);\n                //setGoogleURLs(response.data.items);\n              });\n            }\n          });\n        },\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: cardContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: googleURLs != null && googleURLs.map(function (data) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: data.link,\n              children: data.snippet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextBox, \"EBUSEpW6kPE7MVOblrTWUsVq5yk=\");\n_c = TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useRef","useState","axios","Editor","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","TextBox","_s","editorRef","cardContent","setCardContent","googleURLs","setGoogleURLs","youtubeURLs","setYoutubeURLs","children","apiKey","onInit","evt","editor","current","initialValue","init","height","menubar","plugins","toolbar","setup","ui","registry","addButton","text","onAction","search_content","selection","getContent","console","log","post","then","response","data","answer","googleApi","cx","googleURL","youtubeURL","get","content_style","fileName","_jsxFileName","lineNumber","columnNumber","map","href","link","snippet","_c","$RefreshReg$"],"sources":["/Users/faisalkarim/Desktop/hackathons/gpt-notes/notes-app/src/components/TextBox/TextBox.js"],"sourcesContent":["import React, { useRef , useState} from 'react';\nimport axios from \"axios\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport Card from \"react-bootstrap/Card\"\n\n// google api custom search json api key AIzaSyA4yWgqa2eDcBvv5StSDs_AbVeaZ8eGaCc\n\n// cx number\n/* <script async src=\"https://cse.google.com/cse.js?cx=969e5dfcbcafd41b8\">\n</script>\n<div class=\"gcse-search\"></div> */\n\nexport default function TextBox() {\n  const editorRef = useRef(null);\n  \n  const [cardContent, setCardContent] = useState(\"\");\n  const [googleURLs, setGoogleURLs] = useState(null);\n  const [youtubeURLs, setYoutubeURLs] = useState(null);\n\n  return (\n    <>\n      <Editor\n        apiKey='7c0izecivr1lps70wenvvlpyffvpawkgcjjy7t0h7rlfjod4'\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue=\"<p>This is the initial content of the editor.</p>\"\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [\n            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n            'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n          ],\n          toolbar: 'undo redo | blocks | ' +\n            'bold italic forecolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help | myCustomButton',\n          setup: editor => {\n            editor.ui.registry.addButton('myCustomButton', {\n            text: 'Search',\n            onAction: async () => {\n              var search_content = editor.selection.getContent();\n              console.log(search_content)\n              console.log(typeof(search_content))\n\n              axios.post(\"/search\", {\"search\": search_content})\n              .then(response => {\n                console.log(response.data)\n                setCardContent(response.data.answer);\n\n              })\n              \n              var googleApi = \"AIzaSyA4yWgqa2eDcBvv5StSDs_AbVeaZ8eGaCc\"\n              var cx = \"969e5dfcbcafd41b8\"\n              var googleURL = \"https://www.googleapis.com/customsearch/v1?key=\" + googleApi + \"&cx=\" + cx + \"&q=\" + search_content\n              \n              /*axios.get(googleURL)\n              .then(response => {\n                console.log(response)\n                console.log(googleURL)\n                setGoogleURLs(response.data.items);\n              });*/\n\n              var youtubeURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=5&q=\"+ search_content + \"&type=video&key=\" + googleApi\n\n              axios.get(youtubeURL)\n              .then(response => {\n                console.log(response)\n                console.log(youtubeURL)\n                //setGoogleURLs(response.data.items);\n              });\n\n            }\n          });\n          },\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n        }}\n      />\n      <div>\n        <p>{cardContent}</p>\n        <p>{googleURLs != null && googleURLs.map(function(data) {\n          return (\n            <>\n              <a href = {data.link}>{data.snippet}</a>\n              <br></br>\n              <br></br>\n            </>\n          )\n        })}</p>\n      </div>\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}