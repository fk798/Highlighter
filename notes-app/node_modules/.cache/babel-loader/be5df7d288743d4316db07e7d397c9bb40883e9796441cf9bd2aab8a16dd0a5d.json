{"ast":null,"code":"var _jsxFileName = \"/Users/faisalkarim/Desktop/hackathons/gpt-notes/notes-app/src/components/TextBox/TextBox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from \"axios\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextBox() {\n  _s();\n  const editorRef = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [gptContent, setGPTContent] = useState(\"\");\n  const [googleURLs, setGoogleURLs] = useState(null);\n  const [youtubeURLs, setYoutubeURLs] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          apiKey: process.env.REACT_APP_TINYMCE_API,\n          onInit: (evt, editor) => editorRef.current = editor,\n          initialValue: \"<p>Delete this line and begin typing your notes here!</p>\",\n          init: {\n            height: 500,\n            menubar: false,\n            plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n            toolbar: 'undo redo | blocks | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help | myCustomButton',\n            setup: editor => {\n              editor.ui.registry.addButton('myCustomButton', {\n                text: 'Search',\n                onAction: async () => {\n                  var search_content = editor.selection.getContent();\n                  console.log(search_content);\n                  setSearchQuery(search_content);\n                  if (search_content == \"\" || search_content == \" \") {\n                    setGPTContent(\"\");\n                    setGoogleURLs(null);\n                    setYoutubeURLs(null);\n                    return;\n                  }\n                  axios.post(\"/search\", {\n                    \"search\": search_content\n                  }).then(response => {\n                    console.log(response.data);\n                    setGPTContent(response.data.answer);\n                  });\n                  var googleApi = \"AIzaSyA4yWgqa2eDcBvv5StSDs_AbVeaZ8eGaCc\";\n                  var cx = \"969e5dfcbcafd41b8\";\n                  var googleURL = \"https://www.googleapis.com/customsearch/v1?num=1&key=\" + googleApi + \"&cx=\" + cx + \"&q=\" + search_content;\n                  axios.get(googleURL).then(response => {\n                    console.log(response);\n                    console.log(googleURL);\n                    setGoogleURLs(response.data.items);\n                  });\n                  var youtubeURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=\" + search_content + \"&type=video&key=\" + googleApi;\n                  axios.get(youtubeURL).then(response => {\n                    console.log(response);\n                    console.log(youtubeURL);\n                    setYoutubeURLs(response.data.items);\n                  });\n                }\n              });\n            },\n            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Searched: \", searchQuery]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: gptContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: googleURLs != null && googleURLs.map(function (data) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: data.link,\n                  children: data.snippet\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: youtubeURLs != null && youtubeURLs.map(function (data) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n                  width: \"420\",\n                  height: \"315\",\n                  src: `https://www.youtube.com/embed/${data.id.videoId}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TextBox, \"HmPJTN52RwnuWxgB2jdsKTq1clg=\");\n_c = TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useRef","useState","axios","Editor","Container","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","TextBox","_s","editorRef","searchQuery","setSearchQuery","gptContent","setGPTContent","googleURLs","setGoogleURLs","youtubeURLs","setYoutubeURLs","children","apiKey","process","env","REACT_APP_TINYMCE_API","onInit","evt","editor","current","initialValue","init","height","menubar","plugins","toolbar","setup","ui","registry","addButton","text","onAction","search_content","selection","getContent","console","log","post","then","response","data","answer","googleApi","cx","googleURL","get","items","youtubeURL","content_style","fileName","_jsxFileName","lineNumber","columnNumber","map","href","link","snippet","width","src","id","videoId","_c","$RefreshReg$"],"sources":["/Users/faisalkarim/Desktop/hackathons/gpt-notes/notes-app/src/components/TextBox/TextBox.js"],"sourcesContent":["import React, { useRef , useState} from 'react';\nimport axios from \"axios\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function TextBox() {\n  const editorRef = useRef(null);\n  \n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [gptContent, setGPTContent] = useState(\"\");\n  const [googleURLs, setGoogleURLs] = useState(null);\n  const [youtubeURLs, setYoutubeURLs] = useState(null);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Editor\n            apiKey={process.env.REACT_APP_TINYMCE_API}\n            onInit={(evt, editor) => editorRef.current = editor}\n            initialValue=\"<p>Delete this line and begin typing your notes here!</p>\"\n            init={{\n              height: 500,\n              menubar: false,\n              plugins: [\n                'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n              ],\n              toolbar: 'undo redo | blocks | ' +\n                'bold italic forecolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help | myCustomButton',\n              setup: editor => {\n                editor.ui.registry.addButton('myCustomButton', {\n                text: 'Search',\n                onAction: async () => {\n                  var search_content = editor.selection.getContent();\n                  console.log(search_content)\n                  setSearchQuery(search_content)\n                  if (search_content == \"\" || search_content == \" \") {\n                    setGPTContent(\"\");\n                    setGoogleURLs(null);\n                    setYoutubeURLs(null);\n                    return;\n                  }\n\n                  axios.post(\"/search\", {\"search\": search_content})\n                  .then(response => {\n                    console.log(response.data)\n                    setGPTContent(response.data.answer);\n\n                  })\n                  \n                  var googleApi = \"AIzaSyA4yWgqa2eDcBvv5StSDs_AbVeaZ8eGaCc\"\n                  var cx = \"969e5dfcbcafd41b8\"\n                  var googleURL = \"https://www.googleapis.com/customsearch/v1?num=1&key=\" + googleApi + \"&cx=\" + cx + \"&q=\" + search_content\n                  \n                  axios.get(googleURL)\n                  .then(response => {\n                    console.log(response)\n                    console.log(googleURL)\n                    setGoogleURLs(response.data.items);\n                  });\n\n                  var youtubeURL = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=\"+ search_content + \"&type=video&key=\" + googleApi\n\n                  axios.get(youtubeURL)\n                  .then(response => {\n                    console.log(response)\n                    console.log(youtubeURL)\n                    setYoutubeURLs(response.data.items);\n                  });\n\n                }\n              });\n              },\n              content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n            }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n        <div>\n          <h5>Searched: {searchQuery}</h5>\n          <p>{gptContent}</p>\n          <p>{googleURLs != null && googleURLs.map(function(data) {\n            return (\n              <>\n                <a href = {data.link}>{data.snippet}</a>\n                <br></br>\n                <br></br>\n              </>\n            )\n          })}</p>\n          <p>{youtubeURLs != null && youtubeURLs.map(function(data) {\n            return (\n              <>\n                <iframe width = \"420\" height = \"315\" src = {`https://www.youtube.com/embed/${data.id.videoId}`} />\n                <br></br>\n                <br></br>\n              </>\n            )\n          })}</p>\n        </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}