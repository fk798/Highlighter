{"ast":null,"code":"var _jsxFileName = \"/Users/faisalkarim/Desktop/hackathons/gpt-notes/notes-app/src/components/TextBox/TextBox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextBox() {\n  _s();\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      apiKey: \"7c0izecivr1lps70wenvvlpyffvpawkgcjjy7t0h7rlfjod4\",\n      onInit: (evt, editor) => editorRef.current = editor,\n      initialValue: \"<p>This is the initial content of the editor.</p>\",\n      init: {\n        height: 500,\n        menubar: false,\n        plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],\n        toolbar: 'undo redo | blocks | ' + 'bold italic forecolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help | myCustomButton',\n        setup: editor => {\n          editor.ui.registry.addButton('myCustomButton', {\n            text: 'Search',\n            onAction: async () => {\n              console.log(\"hello\");\n              var search_content = editor.selection.getContent();\n              console.log(search_content);\n              fetch('/search', {\n                method: \"post\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: {\n                  \"search\": search_content\n                }\n              }).then(res => res.json()).then(data => console.log(data));\n              //\n            }\n          });\n        },\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: log,\n      children: \"Log editor content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextBox, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n_c = TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useRef","Editor","jsxDEV","_jsxDEV","Fragment","_Fragment","TextBox","_s","editorRef","log","current","console","getContent","children","apiKey","onInit","evt","editor","initialValue","init","height","menubar","plugins","toolbar","setup","ui","registry","addButton","text","onAction","search_content","selection","fetch","method","headers","body","then","res","json","data","content_style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/faisalkarim/Desktop/hackathons/gpt-notes/notes-app/src/components/TextBox/TextBox.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nexport default function TextBox() {\n  const editorRef = useRef(null);\n  const log = () => {\n    if (editorRef.current) {\n      console.log(editorRef.current.getContent());\n    }\n  };\n  \n  return (\n    <>\n      <Editor\n        apiKey='7c0izecivr1lps70wenvvlpyffvpawkgcjjy7t0h7rlfjod4'\n        onInit={(evt, editor) => editorRef.current = editor}\n        initialValue=\"<p>This is the initial content of the editor.</p>\"\n        init={{\n          height: 500,\n          menubar: false,\n          plugins: [\n            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n            'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'\n          ],\n          toolbar: 'undo redo | blocks | ' +\n            'bold italic forecolor | alignleft aligncenter ' +\n            'alignright alignjustify | bullist numlist outdent indent | ' +\n            'removeformat | help | myCustomButton',\n          setup: editor => {\n            editor.ui.registry.addButton('myCustomButton', {\n            text: 'Search',\n            onAction: async () => {\n              console.log(\"hello\")\n              var search_content = editor.selection.getContent();\n              console.log(search_content)\n\n              fetch('/search', {\n                method: \"post\",\n                headers: {'Content-Type':'application/json'},\n                body: {\n                  \"search\": search_content\n                }\n              }).then(res => res.json())\n                .then(data => console.log(data));\n              //\n              \n            }\n          });\n          },\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n        }}\n      />\n      <button onClick={log}>Log editor content</button>\n    </>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMS,GAAG,GAAGA,CAAA,KAAM;IAChB,IAAID,SAAS,CAACE,OAAO,EAAE;MACrBC,OAAO,CAACF,GAAG,CAACD,SAAS,CAACE,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA,CAACF,MAAM;MACLa,MAAM,EAAC,kDAAkD;MACzDC,MAAM,EAAEA,CAACC,GAAG,EAAEC,MAAM,KAAKT,SAAS,CAACE,OAAO,GAAGO,MAAO;MACpDC,YAAY,EAAC,mDAAmD;MAChEC,IAAI,EAAE;QACJC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,CACP,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EACrE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,EAAE,YAAY,EAC/D,gBAAgB,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAChE;QACDC,OAAO,EAAE,uBAAuB,GAC9B,gDAAgD,GAChD,6DAA6D,GAC7D,sCAAsC;QACxCC,KAAK,EAAEP,MAAM,IAAI;UACfA,MAAM,CAACQ,EAAE,CAACC,QAAQ,CAACC,SAAS,CAAC,gBAAgB,EAAE;YAC/CC,IAAI,EAAE,QAAQ;YACdC,QAAQ,EAAE,MAAAA,CAAA,KAAY;cACpBlB,OAAO,CAACF,GAAG,CAAC,OAAO,CAAC;cACpB,IAAIqB,cAAc,GAAGb,MAAM,CAACc,SAAS,CAACnB,UAAU,CAAC,CAAC;cAClDD,OAAO,CAACF,GAAG,CAACqB,cAAc,CAAC;cAE3BE,KAAK,CAAC,SAAS,EAAE;gBACfC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBAAC,cAAc,EAAC;gBAAkB,CAAC;gBAC5CC,IAAI,EAAE;kBACJ,QAAQ,EAAEL;gBACZ;cACF,CAAC,CAAC,CAACM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI5B,OAAO,CAACF,GAAG,CAAC8B,IAAI,CAAC,CAAC;cAClC;YAEF;UACF,CAAC,CAAC;QACF,CAAC;QACDC,aAAa,EAAE;MACjB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFzC,OAAA;MAAQ0C,OAAO,EAAEpC,GAAI;MAAAI,QAAA,EAAC;IAAkB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACjD,CAAC;AAEP;AAACrC,EAAA,CArDuBD,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}